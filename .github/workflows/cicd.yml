

name: Sonar Scan with Github Actions

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  compile:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn compile


  test:
    runs-on: ubuntu-latest
    needs: compile
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Unit Test Cases
      run: mvn test

  
    - name: Cache SonarQube packages
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Scanning using Sonar
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=niteeshkumarvissakoti_actions_pro

  SonarReport:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Download Sonar Report via API
      run: |
        curl -u "${{ secrets.SONAR_TOKEN }}:" "https://sonarcloud.io/api/issues/search?componentKeys=niteeshkumarvissakoti_sonar_act" \
        -o sonarcloud-issues.json
    
    - name: Upload SonarCloud Issue Report
      uses: actions/upload-artifact@v4
      with:
        name: sonarcloud-issue-report
        path: sonarcloud-issues.json















            # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receiv

  # security-check:
  #   runs-on: ubuntu-latest
  #   needs: compile
  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Trivy Installation
  #     run: |
  #       sudo apt-get install -y wget apt-transport-https gnupg lsb-release
  #       wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
  #       echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
  #       sudo apt-get update -y
  #       sudo apt-get install -y trivy

  #   - name: Trivy FS Scan
  #     run: trivy fs --format table -o fs-report.json .

  #   - name: Gitleaks Installation
  #     run: sudo apt install gitleaks -y
  #   - name: Gitleaks Code Scan
  #     run: gitleaks detect source . -r gitleaks-report.json -f json

  #   - name: Upload Gitleaks Report
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: gitleaks-scan-report
  #       path: gitleaks-report.json


  
    # - name: SonarQube Quality Gate check
    #   id: sonarqube-quality-gate-check
    #   uses: sonarsource/sonarqube-quality-gate-action@master
    #   with:
    #     pollingTimeoutSec: 600
    #   env:
    #       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    #       SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}


    
